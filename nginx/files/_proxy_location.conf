      {%- if location.upstream_proxy_pass is defined %}
      proxy_pass {{ location.upstream_proxy_pass }};
      {%- else %}
      proxy_pass {{ location.get('protocol', 'http') }}://{{ location.get('host', 'localhost') }}:{{ location.get('port', '80') }}{{ location.get('path', '') }};
      {%- endif %}

      proxy_headers_hash_max_size 1024;
      proxy_headers_hash_bucket_size 128;

      {%- include "nginx/files/_access_policy.conf" %}

      {%- if location.timeout is defined %}
      proxy_connect_timeout {{ location.timeout }};
      proxy_send_timeout {{ location.timeout }};
      proxy_read_timeout {{ location.timeout }};
      send_timeout {{ location.timeout }};
      {%- else %}
      proxy_connect_timeout 30;
      proxy_send_timeout 30;
      proxy_read_timeout 30;
      send_timeout 30;
      {%- endif %}

      {%- for directive in location.get('redirect', [{'default': ''}]) %}
        {%- for key in directive %}
      proxy_redirect {{ key }} {{ directive[key] }};
        {%- endfor %}
      {%- endfor %}
      {%- if site.get('ssl', {'enabled': False}).get('enabled', False) and not location.get('no_proxy_https_redirect', False) %}
      proxy_redirect http:// https://;
      {%- endif %}

      {%- for directive in location.get('cookie_domain', [{location.get('host', 'localhost'): '$http_host'}]) %}
        {%- for key in directive %}
      proxy_cookie_domain {{ key }} {{ directive[key] }};
        {%- endfor %}
      {%- endfor %}
      {%- for directive in location.get('cookie_path', [{location.get('path', '/'): path}]) %}
        {%- for key in directive %}
      proxy_cookie_path {{ key }} {{ directive[key] }};
        {%- endfor %}
      {%- endfor %}

      {%- if location.ssl_trusted_certificate is defined %}
      proxy_ssl_trusted_certificate /etc/nginx/certificates/{{ location.ssl_trusted_certificate }}.pem;
      {%- endif %}

      {%- if location.buffer is defined %}
      {%- set buffer_size = location.buffer.get('size', 16) * 2 %}
      proxy_buffering on;
      proxy_buffers {{ location.buffer.get('number', 8) }} {{ location.buffer.get('size', 16) }}k;
      proxy_buffer_size {{ buffer_size }}k;
      proxy_busy_buffers_size {{ location.buffer.get('busy', buffer_size) }}k;
      {%- else %}
      proxy_buffering off;
      {%- endif %}

      {%- if not location.get('request_buffer', True) %}
      proxy_request_buffering off;
      {%- endif %}

      proxy_http_version 1.1;

      {%- if location.get('headers', True) %}
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $http_host{% if site.host.port is defined and site.host.port not in [80,443] %}:{{ site.host.port }}{% endif %};
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Port $server_port;
      {%- endif %}

      {%- if location.get('websocket', False) %}
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      {%- endif %}

      {%- if location.get('keep_host', False) %}
      proxy_set_header Host $http_host;
      {%- endif %}

      {%- for directive in location.get('set_header', [{}]) %}
        {%- for key in directive %}
      proxy_set_header {{ key }} {{ directive[key] }};
        {%- endfor %}
      {%- endfor %}
